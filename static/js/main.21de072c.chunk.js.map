{"version":3,"sources":["components/Paragraph.jsx","App.js","reportWebVitals.js","index.js"],"names":["Paragraph","text","App","Alphabet","useState","count","setCount","setText","dark","setDark","button","setButton","themeStyles","backgroundColor","color","generateLorem","Paragraphs","Sentence","h","i","Math","floor","random","j","length","arr","split","k","charAt","toUpperCase","slice","join","useEffect","style","className","onClick","prevDark","onChange","e","target","value","type","preventDefault","map","paragraph","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21de072c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Paragraph = ({text}) => {\r\n    return (\r\n        <div>\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paragraph\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport \"./App.css\"\r\n\r\nimport Paragraph from './components/Paragraph';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\n  //Database\r\n  const Alphabet = [\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\", \"sed\", \"do\", \"eiusmod\", \"tempor\", \"incididunt\", \"ut\", \"labore\", \"et\", \"dolore\", \"magna\", \"aliqua\", \"ut\", \"enim\", \"ad\", \"minim\", \"veniam\", \"quis\", \"nostrud\", \"exercitation\", \"ullamco\", \"laboris\", \"nisi\", \"ut\", \"aliquip\", \"ex\", \"ea\", \"commodo\", \"consequat\", \"Duis\", \"aute\", \"irure\", \"dolor\", \"in\", \"reprehenderit\", \"in\", \"voluptate\", \"velit\", \"esse\", \"cillum\", \"dolore\", \"eu\", \"fugiat\", \"nulla\", \"pariatur\", \"excepteur\", \"sint\", \"occaecat\", \"cupidatat\", \"non\", \"proident\", \"sunt\", \"in\", \"culpa\", \"qui\", \"officia\", \"deserunt\", \"mollit\", \"anim\", \"id\", \"est\", \"laborum\"];\r\n  \r\n  //States\r\n  const [count, setCount] = useState(2);\r\n  const [text, setText] = useState([]);\r\n  const [dark, setDark] = useState(false);\r\n  const [button, setButton] = useState(\"Dark Mode\");\r\n\r\n  //styles for dark mode\r\n  const themeStyles={\r\n    backgroundColor: dark ? 'black' : 'white',\r\n    color: dark ? 'white' : 'black'\r\n  }\r\n\r\n  //Function to Generate Lipsum\r\n  const generateLorem = () => {\r\n\r\n    if (count > 0) {\r\n\r\n      var Paragraphs = []; //Store Paragraphs\r\n      var Paragraph = []; //Store Sentences\r\n      var Sentence = []; //Store Words\r\n      Paragraph[0] = \"Lorem ipsum dolor laborum non laboris et nisi occaecat adipiscing. \"; //to Starting Text.\r\n\r\n\r\n\r\n      for (let h = 0; h < count; h++) {\r\n        for (let i = 1; i <= (Math.floor(Math.random() * 40 + 20)); i = i + 2) {\r\n          for (let j = 0; j <= (Math.floor(Math.random() * 20 + 10)); j = j + 2) {\r\n            Sentence[j] = Alphabet[Math.floor(Math.random() * 69)];\r\n            Sentence[j + 1] = \" \";\r\n          }\r\n          // Full stop at the end of sentence\r\n          Sentence[Sentence.length - 1] = '. ';\r\n\r\n          //Capitalize first letter of a sentence\r\n          const arr = Sentence[0].split(\" \");\r\n          for (var k = 0; k < arr.length; k++) {\r\n            arr[k] = arr[k].charAt(0).toUpperCase() + arr[k].slice(1);\r\n          }\r\n          Sentence[0] = arr.join(\" \");\r\n\r\n\r\n          Paragraph[i] = Sentence;\r\n          Sentence = [];\r\n        }\r\n        Paragraphs[h] = Paragraph;\r\n        Paragraph = [];\r\n      }\r\n\r\n      setText(Paragraphs);\r\n    } \r\n    \r\n    else {\r\n      setText([\"Enter a Valid Number\"]);\r\n    }\r\n  }\r\n\r\n  //USEEFFECT to generate initial state.\r\n  useEffect(() => { generateLorem(); }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <main style={themeStyles} className=\"w-100 h-100 text-center\">\r\n      <button className=\"btn-secondary\" onClick={()=> {setDark(prevDark => !prevDark);(button === \"Dark Mode\") ? setButton(\"Light Mode\"):setButton(\"Dark Mode\")}}>{button}</button>\r\n      <div className=\"d-flex justify-content-center py-5\">\r\n        <h1 className=\"\">Lorem Ipsum Generator</h1>\r\n      </div>\r\n      <h6>Enter Number of Paragraphs:</h6>\r\n      <form className=\"d-flex justify-content-center\">\r\n        <input onChange={(e) => { setCount(e.target.value) }} value={count} type=\"number\" className=\"w-10\" />\r\n        <button onClick={(e) => { e.preventDefault(); generateLorem(); }} className=\"btn-secondary\">Generate</button>\r\n      </form>\r\n      <div className=\"text-center py-5 px-5\">\r\n        {text.map((paragraph) => { return <Paragraph key={paragraph} text={paragraph} /> })}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}